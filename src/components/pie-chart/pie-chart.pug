mixin pie-chart(data = [])
    +pie-chart1({
      data: data,
      cx: 60,
      cy: 60
    })

mixin draw-sectors({ data = [], angles = [], center = {} })
    - pi = Math.PI;
    - startangle = 0;
    - r = center.cx;

    -for(var i = 0; i < data.length; i++)
        - endangle = startangle + angles[i];

        - sinStartAngle = Math.sin(startangle);
        - cosStartAngle = Math.cos(startangle);
        - sinEndAngle = Math.sin(endangle);
        - cosEndAngle = Math.cos(endangle);

        - x1 = center.cx + r * sinStartAngle;
        - y1 = center.cy + r * cosStartAngle;
        - x2 = center.cx + r * sinEndAngle;
        - y2 = center.cy + r * cosEndAngle;

        - big = (endangle + startangle) > pi ? 1 : 0;
        - dPath = `M${center.cx} ${center.cy} L ${x1} ${y1} A ${r} ${r} 0 ${big} 1 ${x2} ${y2} Z`;
        - sectorColor = data[i].color;
        path(d=dPath, fill=`${sectorColor}`)
        - startangle = endangle;

mixin pie-chart1({data = [], cx, cy})
    - var total = 0;
    each item in data
        - total += item.percent

    - var angles = [];
    - pi = Math.PI;
    -for(var i = 0; i < data.length; i++)
        - angles[i] = data[i].percent / total * pi * 2;
        
    - var width = `${cx * 2}`;
    - var height = `${cy * 2}`;
    svg(width=width, height=height, viewBox=`0 0 ${width} ${height}`)
        +draw-sectors({
          data: data, 
          angles: angles,
          center: {cx: cx, cy: cy}
        })
